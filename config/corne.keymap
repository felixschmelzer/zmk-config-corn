/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        umlaute {
            bindings = <&sl 3>;
            key-positions = <36 41>;
        };
    };

    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";   /* prefer hold if you hold long enough */
            tapping-term-ms = <200>;              /* adjust threshold to taste */
            bindings = <&mo>, <&tog>;
      /* <hold-behavior>, <tap-behavior> */
            label = "MO_TOG";
        };
    };

    macros {
        umlautAmac: umlautAmac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "UMLAUTAMAC";
        };

        umlautOmac: umlautOmac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "UMLAUTOMAC";
        };

        umlautUmac: umlautUmac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp U>;
            label = "UMLAUTUMAC";
        };

        umlautSmac: umlautSmac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(S)>; // Left Alt (Option) + S together
            label = "UMLAUTSMAC";
        };

        euroSign: euroSign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(LS(NUMBER_2))>; // Right Alt + Left Shift + 2
            label = "EUROSIGN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E        &kp R     &kp T        &kp Z    &kp U          &kp I      &kp O    &kp P     &kp ESC
&kp LCTRL       &kp A  &kp S  &kp D        &kp F     &kp G        &kp H    &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&sk LEFT_SHIFT  &kp Y  &kp X  &kp C        &kp V     &kp B        &kp N    &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_ALT
                              &mo_tog 1 1  &kp LGUI  &kp SPACE    &kp RET  &kp BACKSPACE  &mo 2
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT    &kp CARET  &kp KP_MULTIPLY  &kp AMPS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp MINUS  &kp EQUAL        &kp GRAVE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans  &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0       &kp UNDER  &kp PLUS         &kp TILDE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                    &to 0         &trans        &kp SPACE    &kp RET    &trans           &trans
            >;
        };

        controll_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1             &kp F2           &kp F3        &kp F4            &kp F5          &kp F6    &kp F7                &kp F8                &kp F9     &kp F10  &kp F11
&trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT      &kp LEFT  &kp DOWN              &kp UP                &kp RIGHT  &trans   &kp F12
&trans  &bt BT_CLR         &bt BT_SEL 3     &bt BT_SEL 2  &bt BT_SEL 1      &bt BT_SEL 0    &trans    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans     &trans   &trans
                                            &to 0         &trans            &kp SPACE       &kp RET   &trans                &trans
            >;
        };

        umlaute {
            bindings = <
&trans  &trans       &trans       &euroSign  &trans  &trans    &trans  &umlautUmac  &trans  &umlautOmac  &trans  &trans
&trans  &umlautAmac  &umlautSmac  &trans     &trans  &trans    &trans  &trans       &trans  &trans       &trans  &trans
&trans  &trans       &trans       &trans     &trans  &trans    &trans  &trans       &trans  &trans       &trans  &trans
                                  &trans     &trans  &trans    &trans  &trans       &trans
            >;
        };
    };
};
